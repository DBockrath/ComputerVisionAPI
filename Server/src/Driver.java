import CatMatrix.NeuralNet;
import NeuralNetwork.BitString;

public class Driver {

    public static void main(String[] args) {

        NeuralNet neuralNet = new NeuralNet();
        neuralNet.addMain
        System.out.println("Main added");

        neuralNet.addMain
        System.out.println("Main added");

        neuralNet.addMain
        System.out.println("Main added");

        try {

            neuralNet.trainCategoryWeightMatrix();
            System.out.println("Cats trained");

        } catch (Exception e) {

            e.printStackTrace();

        }

        BitString string1 = new BitString
        neuralNet.inputImage(string1, "Random");
        System.out.println("'Random' added");

        System.out.println("Finished!");

    }

}